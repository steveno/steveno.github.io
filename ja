#!/usr/bin/env bash
# SPDX-License-Identifier: BSD-3-Clause

set -o nounset
set -o errexit
set -o pipefail
set -o noclobber

VERSION="1.0"

GREEN='\033[0;32m'
RED='\033[0;31m'
NC='\033[0m'

DATE=$(date +"%Y-%m-%d")
YEAR=$(date +"%Y")
MONTH=$(date +"%m")
TITLE=""
SLUG=""

# Recursively drop through a directory and
# delete and sub-directory named "_posts"
#
# Parameters
# 1 Directory to recurisively decend through
function _delete() {
    local dir="$1"
    for file in "$dir"/*; do
        if [ -d "$file" ]; then
            if [[ "$file" == *"_posts" ]];then
                rm -r "$file"
                continue
            fi
            _delete "$file"
        fi
    done
}

# Read the title of a post from user input
function _get_title() {
    read -rp "Post title: " TITLE
}

# Generate the SLUG for a post from the title
function _set_slug() {
    SLUG=$(echo "$TITLE" | tr '[:upper:]' '[:lower:]' | tr ' ' -)
}

# Write the front matter for a post 
#
# Parameters
# 1 File name to write to
function _write_file() {
    {
        echo "---" 
        echo "title: $TITLE"
        echo "date: $DATE"
        echo "categories:"
        echo "-"
        echo "keywords:"
        echo "description: \"\""
        echo "last_updated:"
        echo "---"
        echo
        echo "* TOC"
        echo "{:toc}"
        echo
        echo "##"
    } >> "$1";
}

# Print version and help information
function help() {
    version
    echo
    echo "Options:"
    echo "-d, --draft           Create a new draft"
    echo "-n, --new             Create a new post"
    echo "-p, --promote         Promote a draft to a post"
    echo "-s, --start-demo      Start the demo server"
    echo "-k, --stop-demo       Stop (kill) the demo server"
    echo
    echo "-h, --help            Print this help"
    echo "-v, --version         Print version information"
}

# Print version information
function version() {
    printf "${GREEN}J${NC}ekyll ${GREEN}A${NC}dmin v$VERSION\n"
}

# Create a new post
function create_post() {
    _get_title
    _set_slug

    mkdir -p _posts/"$YEAR"/"$MONTH"

    post=_posts/"$YEAR"/"$MONTH"/"$DATE"-"$SLUG".md
    _write_file "$post"
    vim "$post"
}

# Create a new draft
function create_draft() {
    _get_title
    _set_slug

    draft=_drafts/"$DATE"-"$SLUG".md
    _write_file "$draft"
    vim "$draft"
}

# Promote a draft to being a post
function promote_draft() {
    # Save a list of all of the drafts
    drafts=$(ls _drafts/)
    count="$(printf "%i" $(ls _drafts | wc -l))"

    # Exit early if there are no drafts
    if [ "$count" -eq 0 ]; then
        >&2 printf "${RED}ERROR${NC} There are no drafts to promote\n" 
        exit 1
    fi
    
    echo -e "$drafts" | nl

    # Pick a draft to promote based on the number
    read -p 'Select draft: ' n

    # Loop through the list of drafts and set our
    # `draft` variable to the draft we're promoting
    for i in `echo -e "$drafts" | nl`; do
        if [ "$n" == "$i" ]; then
            draft=$(echo -e "$drafts" | sed -n ${i}p) 2>&1
            break
        fi
    done;
    
    # Replace the date in the front matter of the post
    sed -i -E "s/date: 20[0-9]{2}-[0-9]{2}-[0-9]{2}/date: $DATE/g" _drafts/$draft

    # Update the file name and move the draft to the posts directory
    sub_string=$(echo "$draft" | sed -E "s/20[0-9]{2}-[0-9]{2}-[0-9]{2}-//g")
    mv _drafts/"$draft" _posts/"$YEAR"/"$MONTH"/"$DATE"-"$sub_string"

    printf "\n%s was promoted to a post\n" "$DATE"-"$sub_string"
}

# Start the demo server for our site
function start_demo() {
    rm -rf _site
    rm -rf .jekyll_cache
    _delete "_posts"

    bundle exec jekyll serve --drafts --livereload --open-url
}

# Kill the demo server
function stop_demo() {
    pkill -f jekyll
}

# Print an error for an unknown command line arg
function unknown_option() {
    >&2 printf "${RED}ERROR${NC} Unknown option $1\n"
}

if [ $# -eq 0 ]; then
    >&2 printf "${RED}ERROR${NC} At least one argument is required\n"
    exit 1
fi

while [[ $# -gt 0 ]]; do
    case $1 in
        -h|--help)
            help
            exit 0
            ;;
        -v|--version)
            version
            exit 0
            ;;
        -d|--draft)
            create_draft
            exit 0
            ;;
        -n|--new)
            create_post
            exit 0
            ;;
        -p|--promote)
            promote_draft
            exit 1
            ;;
        -s|--start-demo)
            start_demo
            exit 0
            ;;
        -k|--stop-demo)
            stop_demo
            exit 0
            ;;
        -*|--*)
            unknown_option $1
            exit 1
            ;;
    esac
done
